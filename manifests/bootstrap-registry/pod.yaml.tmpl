apiVersion: v1
kind: Pod
metadata:
  namespace: "${REGISTRY_NAMESPACE}"
  name: temporary-registry
  labels:
    app: in-cluster-registry
    role: bootstrap
spec:
  tolerations:
    - operator: Exists
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: node-role.kubernetes.io/control-plane
                operator: Exists
  hostNetwork: true
  dnsPolicy: ClusterFirstWithHostNet
  initContainers:
    - name: wait
      image: ghcr.io/mesosphere/wait-for-file-to-exist:${MINDTHEGAP_VERSION}
      args:
        - /registry-data/bundle.tar
      volumeMounts:
        - name: shared
          mountPath: /registry-data
  containers:
    - name: registry
      image: ghcr.io/mesosphere/mindthegap:${MINDTHEGAP_VERSION}
      args:
        - serve
        - bundle
        - --bundle
        - /registry-data/bundle.tar
        - --listen-address
        - "0.0.0.0"
        - --listen-port
        - "8080"
        - --repositories-prefix
        - /library/
      volumeMounts:
        - name: shared
          mountPath: /registry-data
      ports:
        - name: http
          containerPort: 8080
      readinessProbe:
        tcpSocket:
          port: http
  volumes:
    - name: shared
      emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  namespace: "${REGISTRY_NAMESPACE}"
  name: ncr
spec:
  selector:
    app: in-cluster-registry
  clusterIP: 10.96.0.20
  ports:
    - name: registry
      port: 80
      targetPort: 8080
