version: '3'

vars:
  REDIS_CHART_OCI_URL: registry-1.docker.io/bitnamicharts/keydb
  REDIS_CHART_VERSION:
    sh: crane ls '{{.REDIS_CHART_OCI_URL}}' --omit-digest-tags | sort -rV | head -n1
  REDIS_VALUES_FILE: "{{.GIT_REPO_ROOT}}/helm-values/keydb.yaml"
  HARBOR_DATABASE_VALUES_FILE: "{{.GIT_REPO_ROOT}}/helm-values/harbor-database.yaml"
  CLOUDNATIVEPG_CLUSTER_CHART_EXTRA_IMAGES_FILE: "{{.GIT_REPO_ROOT}}/helm-values/harbor-database-extra-images.txt"

tasks:
  create-s3-bucket:
    cmds:
      - cmd: envsubst -i '{{.GIT_REPO_ROOT}}/manifests/harbor/s3-bucket.yaml.tmpl' | kubectl apply --server-side -f -
    status:
      - kubectl get bucketclaim -n '{{.REGISTRY_NAMESPACE}}' harbor-bc
      - kubectl get bucketaccess -n '{{.REGISTRY_NAMESPACE}}' harbor-ba
  create-ca:
    run: once
    cmds:
      - cmd: envsubst -i '{{.GIT_REPO_ROOT}}/manifests/harbor/cert-issuer.yaml.tmpl' | kubectl apply --server-side -f -
    status:
      - kubectl get issuer -n '{{.REGISTRY_NAMESPACE}}' harbor-ca-issuer
  create-redis-cluster:
    cmds:
      - task: create-ca
      - cmd: |
          helm upgrade --install harbor-keydb 'oci://{{.REDIS_CHART_OCI_URL}}' \
            --version '{{.REDIS_CHART_VERSION}}' \
            --values '{{.REDIS_VALUES_FILE}}' \
            --namespace '{{.REGISTRY_NAMESPACE}}' \
            --create-namespace \
            --wait --wait-for-jobs
    status:
      - "helm get metadata --namespace '{{.REGISTRY_NAMESPACE}}' harbor-keydb | grep -qi '^version: {{.REDIS_CHART_VERSION}}$'"
  create-postgresql-cluster:
    cmds:
      - task: create-ca
      - cmd: |
          helm upgrade --install harbor-database cluster \
            --repo '{{.CLOUDNATIVEPG_CHART_REPO}}' \
            --version '{{.CLOUDNATIVEPG_CLUSTER_CHART_VERSION}}' \
            --namespace '{{.REGISTRY_NAMESPACE}}' \
            --create-namespace \
            --wait --wait-for-jobs \
            --values '{{.HARBOR_DATABASE_VALUES_FILE}}'
      - cmd: kubectl wait --for=condition=Ready cluster --namespace '{{.REGISTRY_NAMESPACE}}' harbor-database-cluster --timeout 10m
    status:
      - kubectl wait --for=condition=Ready cluster --namespace '{{.REGISTRY_NAMESPACE}}' harbor-database-cluster --timeout 10m
